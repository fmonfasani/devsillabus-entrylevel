name: CD

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'infra/**'
      - '.github/workflows/cd.yml'

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build web image
        run: |
          docker buildx build \
            --file apps/web/Dockerfile \
            --tag ${{ env.REGISTRY }}/${{ github.repository }}/web:${{ github.sha }} \
            --platform linux/amd64,linux/arm64 \
            --push .
      - name: Build api image
        run: |
          docker buildx build \
            --file apps/api/Dockerfile \
            --tag ${{ env.REGISTRY }}/${{ github.repository }}/api:${{ github.sha }} \
            --platform linux/amd64,linux/arm64 \
            --push .
      - name: Push Helm chart packages
        run: |
          helm package infra/helm/web -d dist
          helm package infra/helm/api -d dist
          gh release upload latest dist/*.tgz --clobber

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Configure kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.28.2
      - name: Login to cluster via OIDC
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER }}
      - name: Sync ArgoCD apps
        run: |
          kubectl apply -f infra/argocd/web-app.yaml
          kubectl apply -f infra/argocd/api-app.yaml
          kubectl -n argocd wait --for=condition=Available deployment/argocd-server --timeout=120s
          argocd app sync saas-web
          argocd app sync saas-api
